from django.db import models
from polymorphic.models import PolymorphicModel


class CarrierBase(PolymorphicModel):
    class Meta:
        ordering = ["identifier"]

    identifier = models.CharField(
        max_length=50,
        unique=True,
        primary_key=True,
        blank=False,
        null=False,
        default="None",
        help_text="Unique ID for the item. Leave as 'None' to use an autogenerated identifier.",
    )
    track_start = models.PositiveSmallIntegerField()
    track_end = models.PositiveSmallIntegerField()
    num_labware_positions = models.PositiveSmallIntegerField()

    def clean(self) -> None:
        if self.identifier.lower() == "none":
            self.identifier = f"Carrier{self.track_start}"

        return super().clean()

    def __str__(self) -> str:
        return self.identifier


class NonMoveableCarrier(CarrierBase): ...


class MoveableCarrier(CarrierBase): ...


class HamiltonAutoloadCarrier(MoveableCarrier):
    carrier_labware_id = models.CharField(
        max_length=50,
        unique=True,
        blank=False,
        null=False,
    )
