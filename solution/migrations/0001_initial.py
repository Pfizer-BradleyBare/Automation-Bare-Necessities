# Generated by Django 5.1.1 on 2024-10-02 18:28

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('method', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ComponentBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='SolutionPropertyPreset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('liquid_type', models.CharField(choices=[('Aqueous', 'Aqueous'), ('Organic', 'Organic'), ('Auto-determine', 'Auto-determine')], max_length=14)),
                ('viscosity', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Auto-determine', 'Auto-determine')], max_length=14)),
                ('volatility', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Auto-determine', 'Auto-determine')], max_length=14)),
                ('homogeneity', models.CharField(choices=[('Heterogenous', 'Heterogenous'), ('Homogenous', 'Homogenous'), ('Suspension', 'Suspension'), ('Emulsion', 'Emulsion'), ('Auto-determine', 'Auto-determine')], max_length=14)),
            ],
        ),
        migrations.CreateModel(
            name='SolutionBase',
            fields=[
                ('componentbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='solution.componentbase')),
                ('storage_condition', models.CharField(choices=[('Ambient', 'Ambient'), ('Cold', 'Cold')], max_length=8)),
                ('liquid_type', models.CharField(choices=[('Aqueous', 'Aqueous'), ('Organic', 'Organic'), ('Auto-determine', 'Auto-determine')], max_length=14)),
                ('viscosity', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Auto-determine', 'Auto-determine')], max_length=14)),
                ('volatility', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Auto-determine', 'Auto-determine')], max_length=14)),
                ('homogeneity', models.CharField(choices=[('Heterogenous', 'Heterogenous'), ('Homogenous', 'Homogenous'), ('Suspension', 'Suspension'), ('Emulsion', 'Emulsion'), ('Auto-determine', 'Auto-determine')], max_length=14)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('solution.componentbase',),
        ),
        migrations.CreateModel(
            name='SolutionComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('unit', models.CharField(choices=[('uL', 'uL'), ('mg', 'mg'), ('units', 'units')], max_length=10)),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='solution.componentbase')),
            ],
        ),
        migrations.CreateModel(
            name='PredefinedSolution',
            fields=[
                ('solutionbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='solution.solutionbase')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('solution.solutionbase',),
        ),
        migrations.AddField(
            model_name='solutionbase',
            name='components',
            field=models.ManyToManyField(to='solution.solutioncomponent'),
        ),
        migrations.CreateModel(
            name='UserDefinedSolution',
            fields=[
                ('solutionbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='solution.solutionbase')),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='method.usermethodworkbookbase')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('solution.solutionbase',),
        ),
    ]
